AIzaSyD8SKdRXPcWKVLMxTaJDZSSlInXvuEBoqc























# TODO: delte me later
def _draw_circle(latitude, longitude, zoom, radius=.75):
    mapCentLat = latitude + 0.002
    mapCentLng = longitude - 0.011
    mapW, mapH = _TILESIZE, _TILESIZE
    radiusThick =  1
    fill = '00BFFF'
    fillOpacity = '60'
    border = 'red'

    encString = GMapCircle(lat, lng, radius); #Encoded polyline string

    $src =  'https://maps.googleapis.com/maps/api/staticmap?';
    $src .= 'center=' .$mapCentLat. ',' .$mapCentLng. '&';
    $src .= 'zoom=' .$zoom. '&';
    $src .= 'size=' .$mapW. 'x' .$mapH.'&';
    $src .= 'maptype=roadmap&';
    $src .= 'style=feature:water|element:geometry.fill|color:0x9bd3ff&';
    $src .= 'path=';
    $src .= 'color:0x' .$circBorder. '00|';
    $src .= 'fillcolor:0x' .$circFill.$circFillOpacity. '|';
    $src .= 'weight:' .$radiusThick. '|';
    $src .= 'enc:' .$encString;

    return $src;
}

# TODO: delte me later
def GMapCircle(Lat, Lng, Rad, Detail=8){
    R    = 6371
    Lat  = (Lat * math.pi) / 180
    Lng  = (Lng * math.pi) / 180
    d    = Rad / R

    points = []
    for i = 0; i <= 360; i+=Detail):
        brng = i * math.pi / 180

        pLat = math.asin(math.sin(Lat)*math.cos(d) + math.cos(Lat)*math.sin(d)*math.cos(brng))
        pLng = ((Lng + math.atan2(math.sin(brng)*math.sin(d)*math.cos(Lat), math.cos(d)-math.sin(Lat)*math.sin(pLat))) * 180) / math.pi
        pLat = (pLat * 180) /math.pi

        points.append(pLat,pLng)

    require_once('PolylineEncoder.php');
    $PolyEnc   = new PolylineEncoder($points);
    $EncString = $PolyEnc->dpEncode();

    return $EncString['Points'];
}